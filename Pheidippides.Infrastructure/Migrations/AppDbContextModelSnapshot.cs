// <auto-generated />
using System;
using System.Collections.Generic;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using Pheidippides.Infrastructure;

#nullable disable

namespace Pheidippides.Infrastructure.Migrations
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("IncidentUser", b =>
                {
                    b.Property<long>("AcknowledgedUsersId")
                        .HasColumnType("bigint");

                    b.Property<long>("AcknowledgedUsersIncidentsId")
                        .HasColumnType("bigint");

                    b.HasKey("AcknowledgedUsersId", "AcknowledgedUsersIncidentsId");

                    b.HasIndex("AcknowledgedUsersIncidentsId");

                    b.ToTable("IncidentUser");
                });

            modelBuilder.Entity("Pheidippides.Domain.FlashCallCodes", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<int>("Code")
                        .HasColumnType("integer");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("FlashCallCodes");
                });

            modelBuilder.Entity("Pheidippides.Domain.Incident", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.PrimitiveCollection<List<long>>("AdditionallyNeedAcknowledgedUsers")
                        .IsRequired()
                        .HasColumnType("bigint[]");

                    b.Property<DateTimeOffset>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTimeOffset>("LastNotifiedMoment")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("Level")
                        .HasColumnType("integer");

                    b.Property<long>("TeamId")
                        .HasColumnType("bigint");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("TeamId");

                    b.ToTable("Incidents");
                });

            modelBuilder.Entity("Pheidippides.Domain.Team", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<long?>("DutyId")
                        .HasColumnType("bigint");

                    b.Property<string>("IncidentCreateToken")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("InviteToken")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTimeOffset?>("LastRotationChange")
                        .HasColumnType("timestamp with time zone");

                    b.Property<long?>("LeadId")
                        .HasColumnType("bigint");

                    b.Property<int>("LeadRotationRule")
                        .HasColumnType("integer");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("RotationPeriodInDays")
                        .HasColumnType("integer");

                    b.Property<TimeSpan>("RotationStartTime")
                        .HasColumnType("interval");

                    b.HasKey("Id");

                    b.HasIndex("InviteToken")
                        .IsUnique();

                    b.HasIndex("LeadId")
                        .IsUnique();

                    b.ToTable("Teams");
                });

            modelBuilder.Entity("Pheidippides.Domain.User", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<DateTimeOffset>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Email")
                        .HasColumnType("text");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<long>("LeadTeamId")
                        .HasColumnType("bigint");

                    b.Property<string>("PasswordHash")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("Role")
                        .HasColumnType("integer");

                    b.Property<string>("SecondName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Surname")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<long?>("TeamId")
                        .HasColumnType("bigint");

                    b.Property<string>("YandexOAuthToken")
                        .HasColumnType("text");

                    b.Property<string>("YandexScenarioName")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("PhoneNumber")
                        .IsUnique();

                    b.HasIndex("TeamId");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("IncidentUser", b =>
                {
                    b.HasOne("Pheidippides.Domain.User", null)
                        .WithMany()
                        .HasForeignKey("AcknowledgedUsersId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Pheidippides.Domain.Incident", null)
                        .WithMany()
                        .HasForeignKey("AcknowledgedUsersIncidentsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Pheidippides.Domain.Incident", b =>
                {
                    b.HasOne("Pheidippides.Domain.Team", "Team")
                        .WithMany("Incidents")
                        .HasForeignKey("TeamId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Team");
                });

            modelBuilder.Entity("Pheidippides.Domain.Team", b =>
                {
                    b.HasOne("Pheidippides.Domain.User", "Lead")
                        .WithOne("LeadTeam")
                        .HasForeignKey("Pheidippides.Domain.Team", "LeadId");

                    b.Navigation("Lead");
                });

            modelBuilder.Entity("Pheidippides.Domain.User", b =>
                {
                    b.HasOne("Pheidippides.Domain.Team", "Team")
                        .WithMany("Workers")
                        .HasForeignKey("TeamId");

                    b.Navigation("Team");
                });

            modelBuilder.Entity("Pheidippides.Domain.Team", b =>
                {
                    b.Navigation("Incidents");

                    b.Navigation("Workers");
                });

            modelBuilder.Entity("Pheidippides.Domain.User", b =>
                {
                    b.Navigation("LeadTeam");
                });
#pragma warning restore 612, 618
        }
    }
}
